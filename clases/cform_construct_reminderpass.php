<?php require_once(PATH_ROOT_CLASES . 'cdatabase.php'); require_once(PATH_ROOT_CLASES . 'cpaginado.php'); require_once(PATH_ROOT_CLASES . 'cusers.php'); require_once(PATH_ROOT_CLASES . 'cmailing.php');  require_once(PATH_ROOT_CLASES . 'cform_construct.php');  class Cform_construct_reminderpass extends  Cform_construct {	var $m_item_id;	function Cform_construct_reminderpass($form_name = '', $lng = 'es', $type = 'new', $item_id = ''){		$this->m_item_id = $item_id;		Cform_construct_reminderpass::Cform_construct($form_name, $lng, $type); 	}	function get_item_id(){		return $this->m_item_id; 	} 	function populate($fillbd = true){		$this->m_form_object = new Cform($this->get_form_name(), $this->get_form_name(), htmlentities($_SERVER['PHP_SELF'], ENT_QUOTES), 'post'); 		$obj = new Cform_text('email',$this->get_form_name().'_email', 'email', '', '', 1, 'text', 1, 60, 60);		$this->m_form_object->add_inputs($obj,$obj->get_id());		if ($this->m_type == 'edit'){			$obj = new Cform_hidden('item_id', $this->get_form_name().'_item_id', '', '', $this->m_item_id); 			$this->m_form_object->add_inputs($obj,$obj->get_id()); 		}		 //creacion token seguretat (anti csrf) 		$this->create_token();		$obj = new Cform_button_submit('submit',$this->get_form_name().'_submit','Enviar'); 		$this->m_form_object->add_inputs($obj,$obj->get_id()); 		$this->m_form_object->close_form(); 		// si es un edit llenamos los objetos con los campos de la base de datos		if ($this->get_type() == 'edit' and $fillbd){			$this->search_and_fill_object_from_bd();		}	} 	function process(){		if (!isset($_POST[$this->m_form_name.'_submit'])){			$this->populate();		}else{			//valida token antiCSRF			$this->validate_token();			//Creamos el formulario y le asignamos los valores			$this->get_and_fill_submited_params();			//validamos el formulario			if ($this->validate()){				//obtenemos los valores del formulario para hacer el save				$item = $this->fill_array_to_save();								$exists_email = Cusers::exist_email($item['email']);																if ($exists_email){											//<td><img 	src='http://questions.sinermedia.com/app_tarotquestions/img/header_mail.jpg'   /></td>												//a√±adimos un hash en el usuario para luego poderlo identificar						$hash = Cusers::create_hash_change_email($exists_email['id']);												$text = "					      <table align='center' width='526'>							<tr>							  <td style='font-family: lucida grande,tahoma,verdana,arial,sans-serif;font-size:16px;' align='left'>". DOMAIN ."</td>							</tr>					      </table>						      					      <table width='526' align='center' style='border:1px solid #cdcdcd;font-family: lucida grande,tahoma,verdana,arial,sans-serif;font-size:12px;line-height:20px;margin-top:15px;' cellpadding='10'>					        <tr>					          <td>					              ". $this->m_language->translate('hola') ."<br><br>					              ". $this->m_language->translate('intro_change_pass') ."<br>					              ". $this->m_language->translate('for_change_pass', array("<a href='http://www.".DOMAIN."/change_password/$hash/' target='_blank'>".$this->m_language->translate('click_aqui')."</a>") ) ."<br><br>					              ". $this->m_language->translate('mgracias') ."<br />					              ". $this->m_language->translate('grettings', array(DOMAIN)) ."					              					          </td>					        </tr>					        <tr>					          <td><font size='1'><br>". $this->m_language->translate('no_reply') ."</font></td>					        </tr>					      </table>";											$mailing = new Cmailing('new_password@'.DOMAIN, $item['email'], $this->m_language->translate('subject_pet', array(DOMAIN) ), $text);						$email_sended = $mailing->send();												if ($email_sended){														$this->set_info_action_form_success($this->m_language->translate('pet_email_send'), 0);				    	Clocation::header_location("/login/");													} else {														$this->set_info_action_form_failed($this->m_language->translate('pet_email_error'), 0);				    	Clocation::header_location("/reminder_password/");													}														} else {											$this->set_info_action_form_failed($this->m_language->translate('not_email'), 0);				    Clocation::header_location("/reminder_password/");									}											Clocation::header_location('/admin/reminderpass/list/');				exit(); 							}//fi validate		}//fi else _post	}//fin process	function search_and_fill_object_from_bd(){		// Buscamos en la base de datos los usuarios		$item = new Creminderpass($this->get_item_id()); 		$resultat = $item->load_item_to_array(); 		// Llenamos el objeto formulario con los valores de la bd		$this->fill_object_from_bd($resultat);	}//fin search_and_fill}?>