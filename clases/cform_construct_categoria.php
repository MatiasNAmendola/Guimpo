<?php require_once(PATH_ROOT_CLASES . 'cdatabase.php'); require_once(PATH_ROOT_CLASES . 'cpaginado.php');  require_once(PATH_ROOT_CLASES . 'cform_construct.php');  class Cform_construct_categoria extends  Cform_construct {	var $m_item_id;	function Cform_construct_categoria($form_name = '', $lng = 'es', $type = 'new', $item_id = ''){		$this->m_item_id = $item_id;		Cform_construct_categoria::Cform_construct($form_name, $lng, $type); 	}	function get_item_id(){		return $this->m_item_id; 	} 	function populate($fillbd = true){		$this->m_form_object = new Cform($this->get_form_name(), $this->get_form_name(), htmlentities($_SERVER['PHP_SELF'], ENT_QUOTES), 'post'); 		$obj = new Cform_text('name',$this->get_form_name().'_name', '', '', '', 1, 'text', 1, 60, 60);		$this->m_form_object->add_inputs($obj,$obj->get_id());		if ($this->m_type == 'new'){			$obj = new Cform_doc('file',$this->get_form_name().'_file', '', '', '', '0', 'pdf,doc');			$this->m_form_object->add_inputs($obj,$obj->get_id());		}else{			$obj = new Cform_doc('file',$this->get_form_name().'_file', '', '', '', '0', 'pdf,doc');			$this->m_form_object->add_inputs($obj,$obj->get_id());		}		if ($this->m_type == 'edit'){			$obj = new Cform_hidden('item_id', $this->get_form_name().'_item_id', '', '', $this->m_item_id); 			$this->m_form_object->add_inputs($obj,$obj->get_id()); 		}		 //creacion token seguretat (anti csrf) 		$this->create_token();		$obj = new Cform_button_submit('submit',$this->get_form_name().'_submit','Enviar'); 		$this->m_form_object->add_inputs($obj,$obj->get_id()); 		$this->m_form_object->close_form(); 		// si es un edit llenamos los objetos con los campos de la base de datos		if ($this->get_type() == 'edit' and $fillbd){			$this->search_and_fill_object_from_bd();		}	} 	function process(){		if (!isset($_POST[$this->m_form_name.'_submit'])){			$this->populate();		}else{			//valida token antiCSRF			$this->validate_token();			//Creamos el formulario y le asignamos los valores			$this->get_and_fill_submited_params();			//validamos el formulario			if ($this->validate()){				//obtenemos los valores del formulario para hacer el save				$item = $this->fill_array_to_save();				//Creamos el objeto file				$archivo = new Carchivo($this->get_form_name(), 'file', 'file', 'categoria');				$ruta_archivo = $archivo->get_url_photo_to_save();				if ($this->m_type == 'new'){					//creamos el objeto cusers					$newitem = new Ccategoria('', $item['name'], $ruta_archivo);					//Si es un stripped hemos de mirar ke no ete creado ya en la BD					if (! $newitem->is_unique($item['name'])){						$this->set_info_action_form_failed('Ya hay un item creado con estos datos', 0); 						Clocation::header_location('/admin/categoria/list/');						exit(); 					}					// guardamos el objeto					if ($newitem->save()){						//Subimos el archivo						$result = $archivo->move();						$this->set_info_action_form_success('Item guardado correctamente', 0); 					}else {						$this->set_info_action_form_failed('Error creando el item', 0); 					}					Clocation::header_location('/admin/categoria/list/');					exit(); 				}else if ($this->m_type == 'edit'){//fi type==new					//Si hay un archivo borramos el anterior					if ($ruta_archivo){						Carchivo::delete(Carchivo::get_ruta_from_database('categoria', $item['item_id'], 'file'));					}					//Obtenemos el objeto					$edititem = new Ccategoria($item['item_id']);					$edititem->edit( $item['name'], $ruta_archivo);					// editamos el objeto					if ($edititem){						//Subimos el archivo						$result = $archivo->move();						$this->set_info_action_form_success('Item editado correctamente', 0); 					}else {						$this->set_info_action_form_failed('Error editando el item', 0); 					}					Clocation::header_location('/admin/categoria/list/');					exit(); 				}//fi else type='edit'			}//fi validate		}//fi else _post	}//fin process	function search_and_fill_object_from_bd(){		// Buscamos en la base de datos los usuarios		$item = new Ccategoria($this->get_item_id()); 		$resultat = $item->load_item_to_array(); 		// Llenamos el objeto formulario con los valores de la bd		$this->fill_object_from_bd($resultat);	}//fin search_and_fill}?>